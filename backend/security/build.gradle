buildscript {
	ext {
		queryDslVersion = "4.4.0"
	}
}

plugins {
	id 'java'
	id 'org.springframework.boot' version '2.5.0'
	id 'io.spring.dependency-management' version '1.0.15.RELEASE'
}

group = 'com.svs'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}



dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa' // 스프링 부트 데이터 JPA 스타터
	implementation 'org.springframework.boot:spring-boot-starter-web' // 스프링 부트 웹 스타터
	implementation 'org.springframework.boot:spring-boot-starter-webflux' // 스프링 부트 웹플럭스 스타터
	implementation group: 'commons-io', name: 'commons-io', version: '2.11.0' // Apache Commons IO 라이브러리, 버전 2.11.0
	implementation 'com.fasterxml.jackson.core:jackson-databind:2.12.5' // Jackson 라이브러리, 버전 2.12.5

	implementation 'io.jsonwebtoken:jjwt:0.9.1' // JWT(JSON Web Token) 라이브러리, 버전 0.9.1
	implementation 'org.springframework.boot:spring-boot-starter-security' // 스프링 부트 시큐리티 스타터

	annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor' // 스프링 부트 구성 프로세서

	compileOnly 'org.projectlombok:lombok' // Lombok 라이브러리 (컴파일 시만 사용되는 의존성)
	developmentOnly 'org.springframework.boot:spring-boot-devtools' // 스프링 부트 개발 도구
	annotationProcessor 'org.projectlombok:lombok' // Lombok 라이브러리의 어노테이션 프로세서
	testImplementation 'org.springframework.boot:spring-boot-starter-test' // 스프링 부트 테스트 스타터
	testImplementation 'io.projectreactor:reactor-test' // Reactor 테스트 라이브러리
	implementation 'mysql:mysql-connector-java' // MySQL JDBC 드라이버

	implementation group: 'org.springdoc', name: 'springdoc-openapi-ui', version: '1.5.10' // SpringDoc OpenAPI UI 라이브러리, 버전 1.5.10

	// QueryDSL
	implementation "com.querydsl:querydsl-jpa:${queryDslVersion}" // QueryDSL JPA 라이브러리, 버전 queryDslVersion 변수 값에 따라 동적으로 지정됨
	annotationProcessor(
			"javax.persistence:javax.persistence-api",
			"javax.annotation:javax.annotation-api",
			"com.querydsl:querydsl-apt:${queryDslVersion}:jpa")

	bootRun {
		systemProperty 'server.servlet.encoding.force-response', 'true'
	}


}

tasks.named('test') {
	useJUnitPlatform()
}
